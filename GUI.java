
package assignment;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        queueText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lifoText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        fifoText = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        queueTime = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        lifoTime = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        fifoTime = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        stackText = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        stackTime = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        fastestText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Queue");

        queueText.setColumns(20);
        queueText.setRows(5);
        jScrollPane1.setViewportView(queueText);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("LinkedList LIFO");

        lifoText.setColumns(20);
        lifoText.setRows(5);
        jScrollPane2.setViewportView(lifoText);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LinkedList FIFO");

        fifoText.setColumns(20);
        fifoText.setRows(5);
        jScrollPane3.setViewportView(fifoText);

        queueTime.setColumns(20);
        queueTime.setRows(5);
        jScrollPane4.setViewportView(queueTime);

        lifoTime.setColumns(20);
        lifoTime.setRows(5);
        jScrollPane5.setViewportView(lifoTime);

        fifoTime.setColumns(20);
        fifoTime.setRows(5);
        jScrollPane6.setViewportView(fifoTime);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Stack");

        stackText.setColumns(20);
        stackText.setRows(5);
        jScrollPane7.setViewportView(stackText);

        stackTime.setColumns(20);
        stackTime.setRows(5);
        jScrollPane8.setViewportView(stackTime);

        fastestText.setColumns(20);
        fastestText.setRows(5);
        jScrollPane9.setViewportView(fastestText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane6)
                            .addComponent(jScrollPane8))))
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */ 
        

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUI gui = new GUI();
                gui.setVisible(true);

                double QueueTT, QueueRT, StackTT, StackRT, LLLIFOTT, LLLIFORT, LLFIFOTT, LLFIFORT;
                
                SchedulingSystem Queue = new SchedulingSystem();
                SchedulingSystem LLLIFO = new SchedulingSystem();
                SchedulingSystem LLFIFO = new SchedulingSystem();
                SchedulingSystem Stack = new SchedulingSystem();
                SchedulingSystem q1 = new SchedulingSystem();

                try (BufferedReader br = new BufferedReader(new FileReader("tasks.txt"))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        String[] taskData = line.split(" ");
                        String methodName = taskData[0];
                        String inputType = taskData[1];
                        String input = taskData[2];

                        Task task = new Task(methodName, inputType, input);
                        Queue.addTaskQueue(task);
                        LLLIFO.addTaskLLLIFO(task);
                        LLFIFO.addTaskLLFIFO(task);
                        Stack.addTaskStack(task);
                        q1.addTaskQueue(task);
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }

                gui.queueText.setText(Queue.executeTasksQueue()); 
                QueueRT = Queue.getAverageResponseTime();
                QueueTT = Queue.getAverageTurnaroundTime();
                gui.queueTime.setText(String.format("Queue Average Response Time: %.2f microseconds", QueueRT));
                gui.queueTime.append(String.format("\nQueue Average Turnaround Time: %.2f microseconds", QueueTT));

                gui.lifoText.setText(LLLIFO.executeTasksLLLIFO());
                LLLIFORT = LLLIFO.getAverageResponseTime();
                LLLIFOTT = LLLIFO.getAverageTurnaroundTime();
                gui.lifoTime.setText(String.format("LL LIFO Average Response Time: %.2f microseconds", LLLIFORT));
                gui.lifoTime.append(String.format("\nLL LIFO Average Turnaround Time: %.2f microseconds", LLLIFOTT));

                gui.fifoText.setText(LLFIFO.executeTasksLLFIFO()); 
                LLFIFORT = LLFIFO.getAverageResponseTime();
                LLFIFOTT = LLFIFO.getAverageTurnaroundTime();
                gui.fifoTime.setText(String.format("LL FIFO Average Response Time: %.2f microseconds", LLFIFORT));
                gui.fifoTime.append(String.format("\nLL FIFO Average Turnaround Time: %.2f microseconds", LLFIFOTT));

                gui.stackText.setText(Stack.executeTasksStack());
                StackRT = Stack.getAverageResponseTime();
                StackTT = Stack.getAverageTurnaroundTime();
                gui.stackTime.setText(String.format("Stack Average Response Time: %.2f microseconds", StackRT));
                gui.stackTime.append(String.format("\nStack Average Turnaround Time: %.2f microseconds", StackTT));
                
                gui.fastestText.setText(comparePerformance(QueueRT, QueueTT, LLLIFORT, LLLIFOTT, LLFIFORT, LLFIFOTT, StackRT, StackTT));
            }
        });
    }
    
        public static String comparePerformance(double queueRT, double queueTT, double lllifoRT, double lllifoTT, double llfifoRT, double llfifoTT, double stackRT, double stackTT) {

            double fastestResponseTime = Math.min(queueRT, Math.min(lllifoRT, Math.min(llfifoRT, stackRT)));
            double fastestTurnaroundTime = Math.min(queueTT, Math.min(lllifoTT, Math.min(llfifoTT, stackTT)));

            StringBuilder result = new StringBuilder();
            result.append("Comparison of Data Structures:\n");
            result.append("Fastest Response Time: ").append(fastestResponseTime).append(" microseconds (");

            if (fastestResponseTime == queueRT) {
                result.append("Queue)");
            } else if (fastestResponseTime == lllifoRT) {
                result.append("LL LIFO)");
            } else if (fastestResponseTime == llfifoRT) {
                result.append("LL FIFO)");
            } else if (fastestResponseTime == stackRT) {
                result.append("Stack)");
            }

            result.append("\n");

            result.append("Fastest Turnaround Time: ").append(fastestTurnaroundTime).append(" microseconds (");

            if (fastestTurnaroundTime == queueTT) {
                result.append("Queue)");
            } else if (fastestTurnaroundTime == lllifoTT) {
                result.append("LL LIFO)");
            } else if (fastestTurnaroundTime == llfifoTT) {
                result.append("LL FIFO)");
            } else if (fastestTurnaroundTime == stackTT) {
                result.append("Stack)");
            }

            result.append("\n");

            return result.toString();
        }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea fastestText;
    private javax.swing.JTextArea fifoText;
    private javax.swing.JTextArea fifoTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea lifoText;
    private javax.swing.JTextArea lifoTime;
    private javax.swing.JTextArea queueText;
    private javax.swing.JTextArea queueTime;
    private javax.swing.JTextArea stackText;
    private javax.swing.JTextArea stackTime;
    // End of variables declaration//GEN-END:variables
}
